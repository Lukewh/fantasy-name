/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var fantasy_name_exports = {};
__export(fantasy_name_exports, {
  default: () => GMEmulator
});
module.exports = __toCommonJS(fantasy_name_exports);
var import_obsidian = require("obsidian");
var insertName = (editor, name) => {
  const cursor = editor.getCursor();
  editor.replaceRange(name, cursor);
  editor.setCursor(cursor.line, cursor.ch + name.length);
};
var GMEmulator = class extends import_obsidian.Plugin {
  async onload() {
    console.log("loading plugin");
    this.addCommand({
      id: "fantasy-name-insert",
      name: "Insert fantasy name",
      editorCallback: async (editor) => {
        const resp = await fetch("https://fantasyname.lukewh.com?family=t");
        const name = await resp.text();
        new import_obsidian.Notice(`Answer: ${name}`);
        insertName(editor, name);
      }
    });
    this.addCommand({
      id: "fantasy-name-insert-female",
      name: "Insert fantasy name (Female)",
      editorCallback: async (editor) => {
        const resp = await fetch(
          "https://fantasyname.lukewh.com?gender=f&family=t"
        );
        const name = await resp.text();
        new import_obsidian.Notice(`Answer: ${name}`);
        insertName(editor, name);
      }
    });
    this.addCommand({
      id: "fantasy-name-insert-male",
      name: "Insert fantasy name (Male)",
      editorCallback: async (editor) => {
        const resp = await fetch(
          "https://fantasyname.lukewh.com?gender=m&family=t"
        );
        const name = await resp.text();
        new import_obsidian.Notice(`Answer: ${name}`);
        insertName(editor, name);
      }
    });
  }
  onunload() {
    console.log("unloading plugin");
  }
};
